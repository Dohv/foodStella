<!-- rendering dynamic css tags for images in a recipe  -->
<%= render 'recipe_css_variables' %>

<div class= "row calendar-page">
  <div class="col-md-4">

            <div id='external-events'>
              <div id='external-events-listing'>
                <h4>Meals</h4>
                <% @recipes.each do |r| %>
                  <div class='fc-event <%= r.name %>'><%= r.name %></div>
                <% end %>
              </div>
              <p>
                <input type='checkbox' id='drop-remove'/>
                <label for='drop-remove'>remove after drop</label>
              </p>
            </div>
    </div>

    <div class="calendar-title"><h1><%= @calendar_title %></h1></div>
            
    <div class="col-md-7">    
      <div class="calendar-header">
        <h1>Breakfast</h1>
        <h1>Snack</h1>
        <h1>Lunch</h1>
        <h1>Snack</h1>
        <h1>Dinner</h1>
      </div>         
      <div id='calendar'>
      </div>          
    </div>

    <div class="col-md-1"></div>


            <div style='clear:both'></div>
</div>

<!--script>

$('#calendar').fullCalendar({
    defaultView: 'timelineMonth',
    events: [
        // events go here
    ],
    resources: [
        // resources go here
    ]
    // other options go here...
});
</script-->

<script>

$(document).ready(function() {

    var calendarWidth = $('#calendar').outerWidth()
    console.log(calendarWidth)

    $('.calendar-header').css('width', calendarWidth + 'px');


            /* initialize the external events
            -----------------------------------------------------------------*/

            $('#external-events .fc-event').each(function() {

                // store data so the calendar knows to render an event upon drop
                $(this).data('event', {
                    title: $.trim($(this).text()), // use the element's text as the event title
                    stick: true // maintain when user navigates (see docs on the renderEvent method)
                });

                // make the event draggable using jQuery UI
                $(this).draggable({
                    zIndex: 999,
                    revert: true,      // will cause the event to go back to its
                    revertDuration: 0  //  original position after the drag
                });


            });


            /* initialize the calendar1
            -----------------------------------------------------------------*/

            $('#calendar').fullCalendar({
              now: '2016-01-07',
              defaultView: 'timelineDay',

              events: [
        { id: '1', start: '2016-01-07T02:00:00', end: '2016-01-07T07:00:00', title: 'event 1', className: 'pizza' },
        { id: '2',  start: '2016-01-07T05:00:00', end: '2016-01-07T22:00:00', title: 'event 2' },
        { id: '3', start: '2016-01-06', end: '2016-01-08', title: 'event 3' },
        { id: '4', start: '2016-01-07T03:00:00', end: '2016-01-07T08:00:00', title: 'event 4' },
        { id: '5',  start: '2016-01-07T00:30:00', end: '2016-01-07T02:30:00', title: 'event 5' }
      ],


              height: 500,
          //    slotWidth: 36.5,
           //   slotDuration: 30,
              editable: true,
              droppable: true, // this allows things to be dropped onto the calendar
              dragRevertDuration: 0,
              eventLimit: true, // allow "more" link when too many events
              drop: function(date, jsEvent, ui) { 

                    console.log('calendar 1 drop');
                    // is the "remove after drop" checkbox checked?
                    if ($('#drop-remove').is(':checked')) {
                        // if so, remove the element from the "Draggable Events" list
                        $(this).remove();
                    }

                    $('.fc-event').each(function() {
                      var $this = $(this);
                      var text = $this.find(".fc-title").text()
                      var eventTitle = $.trim($(this).text())

                      if (text == eventTitle) {
                        $this.addClass(eventTitle);
                        console.log('in evaluation');
                      };
                    });

                    $.ajax({//ajax call for questions
                  type:'POST',
                  data: event,
                  url:'/events/new',
              
                  success:function (response) {
                    console.log("success")
                  }
                  
                });//end ajax call
            }
                
           

        });
      });
</script>

